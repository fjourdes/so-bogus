project(so-bogus)
cmake_minimum_required(VERSION 2.6)

OPTION( TESTS "Build tests" ON )
OPTION( APPS "Build apps" ON )
OPTION( LIB "Build lib" ON )

OPTION( OPENMP "Use OpenMP" ON )
OPTION( BOOST_SERIALIZATION "Use boost::serialization" ON )
OPTION( MKL "Use mkl" OFF )

OPTION( WITH_2D "Build lib with 2d support" ON )
OPTION( WITH_3D "Build lib with 3d support" ON )
OPTION( WITH_DYNAMIC "Build lib with dynamic dim support" OFF )

OPTION( CPP11     "Build with c++11 standard" OFF )
OPTION( STRICT    "Treat warnings as errors (-Werror)" OFF )
OPTION( FAST_MATH "Enable unsafe compiler optimizations " ON )

SET( SOBOGUS_ROOT ${CMAKE_CURRENT_SOURCE_DIR} )
SET( CMAKE_MODULE_PATH ${SOBOGUS_ROOT}/cmake )


# MKL
if( MKL )
		find_package( MKL )
		if( MKL_FOUND )
								add_definitions( -DBOGUS_WITH_MKL )
								SET( EXTERNAL_INCLUDES ${EXTERNAL_INCLUDES} ${MKL_INCLUDE_DIRS} )
								SET( EXTERNAL_LIBRARIES ${EXTERNAL_LIBRARIES} ${MKL_LIBRARIES} mkl_intel_lp64 mkl_intel_thread mkl_core iomp5 )
		endif()
endif()

# Build types and processor flags

if (NOT CMAKE_BUILD_TYPE)
  message(STATUS "No build type selected, default to Release")
  set(CMAKE_BUILD_TYPE "Release")
endif()

if ( "${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang" )
  set (CLANG TRUE)
elseif( "${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU" )
  set (GCC TRUE)
endif()

if ( GCC OR CLANG )
				SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra " )
				SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-ignored-attributes " ) #gcc 6 + eigen
				if( CPP11 )
						SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -Wno-deprecated-declarations " )
				endif()
				if( STRICT )
						SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror " )
				endif()
				if( FAST_MATH )
						SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -ffast-math" )
				endif()

				if( GCC AND APPLE )
						SET( EXTERNAL_LIBRARIES ${EXTERNAL_LIBRARIES} stdc++ )
				endif()

				#Do not use -march=native on gcc < 4.3
				SET(HANDLE_MARCH_NATIVE TRUE)
				if (GCC)
								execute_process(COMMAND ${CMAKE_C_COMPILER} -dumpversion OUTPUT_VARIABLE GCC_VERSION)
								if ( NOT GCC_VERSION VERSION_GREATER 4.3 AND NOT GCC_VERSION VERSION_EQUAL 4.3 )
												SET(HANDLE_MARCH_NATIVE FALSE)
								endif()

				endif()

				if( HANDLE_MARCH_NATIVE )
								SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}  -march=native -DEIGEN_NO_DEBUG ")
				else()
								SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}  -msse -msse2 -DEIGEN_NO_DEBUG ")
				endif()
endif()

if( LIB )
		add_subdirectory( bogus )
endif()
if( TESTS )
				enable_testing()
				add_subdirectory( tests )
endif()
if( APPS )
				add_subdirectory( apps )
endif()
